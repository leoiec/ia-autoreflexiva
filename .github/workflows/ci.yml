name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      # Forzamos las constraints para resolver el conflicto de litellm/crewai
      PIP_CONSTRAINT: constraints.txt
      PYTHONWARNINGS: default

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Fail if legacy module exists
        run: |
          if [ -f "modules/autonomous_agent.py" ]; then
            echo "Legacy file modules/autonomous_agent.py must be deleted."
            exit 1
          fi

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip wheel

      - name: Install requirements (core)
        run: |
          pip install --no-cache-dir -r requirements.txt

      - name: Install dev requirements
        run: |
          if [ -f requirements-dev.txt ]; then
            pip install --no-cache-dir -r requirements-dev.txt
          fi
          pip check

      - name: Static checks (flake8 + mypy)
        run: |
          if command -v flake8 >/dev/null 2>&1; then
            flake8 .
          fi
          if command -v mypy >/dev/null 2>&1; then
            mypy --ignore-missing-imports .
          fi

      - name: Import safety smoke test
        run: |
          python - << 'PY'
          import importlib, os
          # Debe importar sin efectos colaterales
          m = importlib.import_module("modules.autonomous_agent")
          # No debería cargar core hasta que se invoque algo explícito
          import sys
          assert "modules.autonomous_agent.core" not in sys.modules, "core imported too early"
          print("OK: package imports with no side-effects.")
          PY

      - name: Run tests
        run: |
          mkdir -p test-results
          if command -v pytest >/dev/null 2>&1; then
            pytest -q --maxfail=1 --disable-warnings --cache-clear --junitxml=test-results/junit.xml
          else
            echo "pytest not installed; skipping tests."
          fi

      - name: Upload test results (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results

  # Job ligero para verificar que el paquete se puede importar con diferentes versiones de Python
  import-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    env:
      PIP_CONSTRAINT: constraints.txt

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install minimal deps to import package
        run: |
          python -m pip install --upgrade pip wheel
          pip install --no-cache-dir -r requirements.txt

      - name: Import smoke test
        run: |
          python - << 'PY'
          import importlib
          importlib.import_module("modules.autonomous_agent")
          print("OK: import works in this Python version.")
          PY
