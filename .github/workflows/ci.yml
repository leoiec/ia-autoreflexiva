name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # Asegura que 'modules/' y demás código del repo sea importable en tests
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Show Python & pip
        run: |
          python -V
          pip -V

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi
          # Fallbacks suaves, por si no están en requirements-dev
          pip install -q flake8 mypy pytest || true
          pip list

      # ---- flake8 (NO bloquea) ----
      - name: flake8 (non-blocking)
        continue-on-error: true
        run: |
          if [ -f ".flake8" ] || [ -f "setup.cfg" ] || [ -f "pyproject.toml" ]; then
            echo "Running flake8…"
            # Añadimos '|| true' como red de seguridad adicional
            flake8 . || true
          else
            echo "No flake8 config found; skipping."
          fi

      # ---- mypy (NO bloquea) ----
      - name: mypy (non-blocking)
        continue-on-error: true
        run: |
          if [ -f ".mypy.ini" ] || [ -f "mypy.ini" ] || [ -f "pyproject.toml" ]; then
            echo "Running mypy…"
            # Instala stubs que falten y nunca rompas el pipeline
            mypy --install-types --non-interactive || true
          else
            echo "No mypy config found; skipping."
          fi

      # ---- Tests (SÍ bloquea) ----
      - name: Run tests
        env:
          PYTHONWARNINGS: default
          # PYTHONPATH ya está a nivel de job, pero lo reiteramos aquí si quieres
          PYTHONPATH: ${{ github.workspace }}
        run: |
          if [ -f "pytest.ini" ] || [ -f "pyproject.toml" ] || [ -d "tests" ]; then
            echo "Running pytest…"
            pytest -q --maxfail=1
          else
            echo "No tests found; skipping pytest."
          fi
